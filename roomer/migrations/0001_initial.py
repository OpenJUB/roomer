# -*- coding: utf-8 -*-
# Generated by Django 1.9.2 on 2016-05-06 12:26
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.auth.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import roomer.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0007_alter_validators_add_error_messages'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 30 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=30, unique=True, validators=[django.core.validators.RegexValidator('^[\\w.@+-]+$', 'Enter a valid username. This value may contain only letters, numbers and @/./+/-/_ characters.')], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('year', models.IntegerField(editable=False)),
                ('major', models.CharField(editable=False, max_length=128)),
                ('country', models.CharField(editable=False, max_length=64)),
                ('college_pref', models.CharField(blank=True, max_length=11)),
                ('seniority', models.IntegerField(editable=False)),
                ('extra_points', models.IntegerField(default=0)),
                ('old_college', roomer.models.CollegeField(choices=[(b'NM', b'Nordmetall'), (b'C3', b'C3'), (b'KR', b'Krupp'), (b'ME', b'Mercator')], editable=False, max_length=2)),
                ('college', roomer.models.CollegeField(blank=True, choices=[(b'NM', b'Nordmetall'), (b'C3', b'C3'), (b'KR', b'Krupp'), (b'ME', b'Mercator')], max_length=2)),
                ('points', models.DecimalField(blank=True, decimal_places=3, default=0, editable=False, max_digits=6)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('roommates', models.ManyToManyField(blank=True, related_name='_userprofile_roommates_+', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='College',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', roomer.models.CollegeField(choices=[(b'NM', b'Nordmetall'), (b'C3', b'C3'), (b'KR', b'Krupp'), (b'ME', b'Mercator')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=8)),
                ('floor', models.IntegerField()),
                ('block', models.CharField(max_length=1)),
                ('associated', models.ManyToManyField(related_name='_room_associated_+', to='roomer.Room')),
            ],
        ),
        migrations.CreateModel(
            name='RoommateRequest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbox', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outbox', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='college',
            name='rooms',
            field=models.ManyToManyField(to='roomer.Room'),
        ),
        migrations.AlterUniqueTogether(
            name='roommaterequest',
            unique_together=set([('sender', 'receiver')]),
        ),
    ]
